{"version":3,"sources":["components/Title.jsx","components/Form/EqualButton.jsx","components/Form/TextField.jsx","components/Form/OpeButton.jsx","components/Form/Form.jsx","components/Results.jsx","components/Loading.jsx","pages/TopPage.jsx","App.jsx","index.js"],"names":["Title","title","EqualButton","sentense","setResults","className","value","name","onClick","console","log","axios","post","then","response","data","TextField","setSentense","setNextIsText","inputEl","type","onChange","e","target","ref","OpeButton","children","nextIsText","prev","current","focus","Form","useState","useRef","Results","countryData","loading","date","newConfirmed","totalConfirmed","newRecovered","totalRecovered","slice","toLocaleString","Loading","TopPage","results","get","res","App","setLoading","country","setCountry","setCountryData","useEffect","fetch","json","length","Date","Confirmed","Recovered","catch","err","alert","countriesJson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.50fd6742.chunk.js","sourcesContent":["const Title = ({ title }) => {\n\treturn (\n\t\t<div>\n\t\t\t<h1>{title}</h1>\n\t\t</div>\n\t);\n};\n\nexport default Title;\n","import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst EqualButton = ({ sentense, setResults }) => {\r\n\tconst baseURL = \"/data\";\r\n\tconst handleSubmit = () => {\r\n\t\tconsole.log(sentense);\r\n\t\taxios\r\n\t\t\t.post(baseURL, {\r\n\t\t\t\tsentense: sentense,\r\n\t\t\t})\r\n\t\t\t.then((response) => {\r\n\t\t\t\tsetResults(response.data);\r\n\t\t\t\tconsole.log(response);\r\n\t\t\t});\r\n\t};\r\n\treturn (\r\n\t\t<button className=\"equal-btn\" value=\"=\" name=\"=\" onClick={handleSubmit}>\r\n\t\t\t=\r\n\t\t</button>\r\n\t);\r\n};\r\n\r\nexport default EqualButton;\r\n","import React from \"react\";\r\n\r\nconst TextField = ({ sentense, setSentense, setNextIsText, inputEl }) => {\r\n\tconst handleChange = (e) => {\r\n\t\tsetSentense(e.target.value);\r\n\t\tsetNextIsText(false);\r\n\t};\r\n\treturn (\r\n\t\t<div className=\"text-field\">\r\n\t\t\t<input\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tvalue={sentense}\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t\tref={inputEl}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default TextField;\r\n","const OpeButton = ({\r\n\tchildren,\r\n\tsetSentense,\r\n\tnextIsText,\r\n\tsetNextIsText,\r\n\tinputEl,\r\n}) => {\r\n\tconst setOperator = () => {\r\n\t\tif (nextIsText) return;\r\n\t\tsetSentense((prev) => `${prev} ${children} `);\r\n\t\tsetNextIsText(true);\r\n\t\tinputEl.current.focus();\r\n\t};\r\n\treturn <button onClick={setOperator}>{children}</button>;\r\n};\r\n\r\nexport default OpeButton;\r\n","import { useState, useRef } from \"react\";\nimport EqualButton from \"./EqualButton\";\nimport TextField from \"./TextField\";\nimport OpeButton from \"./OpeButton\";\n\nconst Form = ({ sentense, setSentense, setResults }) => {\n\tconst [nextIsText, setNextIsText] = useState(true);\n\tconst AcButton = () => {\n\t\tsetSentense(\"\");\n\t\tsetNextIsText(true);\n\t};\n\tconst inputEl = useRef(null);\n\treturn (\n\t\t<div className=\"form-container\">\n\t\t\t<div className=\"input-form\">\n\t\t\t\t<TextField\n\t\t\t\t\tsentense={sentense}\n\t\t\t\t\tsetSentense={setSentense}\n\t\t\t\t\tsetNextIsText={setNextIsText}\n\t\t\t\t\tinputEl={inputEl}\n\t\t\t\t/>\n\t\t\t\t<EqualButton sentense={sentense} setResults={setResults} />\n\t\t\t</div>\n\t\t\t<div className=\"ope-btns\">\n\t\t\t\t<button onClick={AcButton}>AC</button>\n\t\t\t\t<OpeButton\n\t\t\t\t\tnextIsText={nextIsText}\n\t\t\t\t\tsetNextIsText={setNextIsText}\n\t\t\t\t\tsetSentense={setSentense}\n\t\t\t\t\tinputEl={inputEl}\n\t\t\t\t>\n\t\t\t\t\t+\n\t\t\t\t</OpeButton>\n\t\t\t\t<OpeButton\n\t\t\t\t\tnextIsText={nextIsText}\n\t\t\t\t\tsetNextIsText={setNextIsText}\n\t\t\t\t\tsetSentense={setSentense}\n\t\t\t\t\tinputEl={inputEl}\n\t\t\t\t>\n\t\t\t\t\t-\n\t\t\t\t</OpeButton>\n\t\t\t\t{/* <OpeButton\n\t\t\t\t\tnextIsText={nextIsText}\n\t\t\t\t\tsetNextIsText={setNextIsText}\n\t\t\t\t\tsetSentense={setSentense}\n\t\t\t\t\tinputEl={inputEl}\n\t\t\t\t>\n\t\t\t\t\t×\n\t\t\t\t</OpeButton>\n\t\t\t\t<OpeButton\n\t\t\t\t\tnextIsText={nextIsText}\n\t\t\t\t\tsetNextIsText={setNextIsText}\n\t\t\t\t\tsetSentense={setSentense}\n\t\t\t\t\tinputEl={inputEl}\n\t\t\t\t>\n\t\t\t\t\t÷\n\t\t\t\t</OpeButton> */}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Form;\n","import { Loading } from \"./index\";\n\nconst Results = ({ countryData, loading }) => {\n\tconst { date, newConfirmed, totalConfirmed, newRecovered, totalRecovered } =\n\t\tcountryData;\n\treturn (\n\t\t<div className=\"results-container\">\n\t\t\t{loading ? (\n\t\t\t\t<Loading />\n\t\t\t) : (\n\t\t\t\t<div>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t日付: <span>{date.slice(0, 10)}</span>\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t新規感染者: <span>{newConfirmed.toLocaleString()}</span>\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t感染者総数: <span>{totalConfirmed.toLocaleString()}</span>\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t新規回復者: <span>{newRecovered.toLocaleString()}</span>\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t回復者総数: <span>{totalRecovered.toLocaleString()}</span>\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default Results;\n","const Loading = () => {\n    return (\n        <div className=\"loading\"></div> \n    );\n};\n\nexport default Loading;","import { useState } from \"react\";\nimport axios from \"axios\";\nimport { Header, Title, Form, Results } from \"../components/index\";\n\nconst TopPage = ({ countryData, loading }) => {\n\tconst [sentense, setSentense] = useState(\"\");\n\tconst [results, setResults] = useState({});\n\tconst getHello = () => {\n\t\taxios.get(\"/hello\").then((res) => {\n\t\t\tconsole.log(res);\n\t\t});\n\t};\n\treturn (\n\t\t<div className=\"top-page-container\">\n\t\t\t<div>\n\t\t\t\t{/* <Header /> */}\n\t\t\t\t<Title title={\"Math Calculator\"} />\n\t\t\t\t<Form\n\t\t\t\t\tsentense={sentense}\n\t\t\t\t\tsetSentense={setSentense}\n\t\t\t\t\tsetResults={setResults}\n\t\t\t\t/>\n\t\t\t\t<Results\n\t\t\t\t\tcountryData={countryData}\n\t\t\t\t\tloading={loading}\n\t\t\t\t\tresults={results}\n\t\t\t\t/>\n\t\t\t\t<button onClick={getHello}></button>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default TopPage;\n","import { useState, useEffect } from \"react\";\nimport countriesJson from \"./countries.json\";\nimport TopPage from \"./pages/TopPage\";\nimport \"./App.css\";\n\nfunction App() {\n\tconst [loading, setLoading] = useState(false);\n\tconst [country, setCountry] = useState(\"japan\");\n\tconst [countryData, setCountryData] = useState({\n\t\tdate: \"\",\n\t\tnewConfirmed: \"\",\n\t\ttotalConfirmed: \"\",\n\t\tnewRecovered: \"\",\n\t\ttotalRecovered: \"\",\n\t});\n\n\tuseEffect(() => {\n\t\tconst getCountryData = () => {\n\t\t\tsetLoading(true);\n\t\t\tfetch(`https://api.covid19api.com/country/${country}`)\n\t\t\t\t.then((res) => res.json())\n\t\t\t\t.then((data) => {\n\t\t\t\t\tsetCountryData({\n\t\t\t\t\t\tdate: data[data.length - 1].Date,\n\t\t\t\t\t\tnewConfirmed:\n\t\t\t\t\t\t\tdata[data.length - 1].Confirmed - data[data.length - 2].Confirmed,\n\t\t\t\t\t\ttotalConfirmed: data[data.length - 1].Confirmed,\n\t\t\t\t\t\tnewRecovered:\n\t\t\t\t\t\t\tdata[data.length - 1].Recovered - data[data.length - 2].Recovered,\n\t\t\t\t\t\ttotalRecovered: data[data.length - 1].Recovered,\n\t\t\t\t\t});\n\t\t\t\t\tsetLoading(false);\n\t\t\t\t})\n\t\t\t\t.catch((err) =>\n\t\t\t\t\talert(\n\t\t\t\t\t\t\"エラーが発生しました。ページをリロードして、もう一度トライしてください。\"\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t};\n\t\tgetCountryData();\n\t}, [country]);\n\treturn (\n\t\t<TopPage\n\t\t\tcountriesJson={countriesJson}\n\t\t\tsetCountry={setCountry}\n\t\t\tcountryData={countryData}\n\t\t\tloading={loading}\n\t\t/>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}