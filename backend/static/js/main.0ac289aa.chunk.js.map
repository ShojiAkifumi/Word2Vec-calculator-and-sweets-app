{"version":3,"sources":["components/Header.js","components/Title.js","components/Selector.js","components/Loading.js","components/Results.js","pages/TopPage.js","components/Card.js","pages/WorldPage.js","App.js","index.js"],"names":["Header","className","to","Title","Selector","setCountry","countriesJson","onChange","e","target","value","map","country","index","Slug","Country","Loading","Results","countryData","loading","date","newConfirmed","totalConfirmed","newRecovered","totalRecovered","slice","toLocaleString","TopPage","Card","allCountriesData","singleData","NewConfirmed","TotalConfirmed","WorldPage","App","useState","setLoading","setCountryData","setAllCountriesData","useEffect","fetch","then","res","json","data","length","Date","Confirmed","Recovered","catch","err","alert","Countries","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0ac289aa.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\n\nconst Header = () => {\n    return (\n        <div className=\"header\">\n            <Link to=\"/\">国ごとの感染状況</Link>   \n            <Link to=\"/world\">世界の感染状況</Link>   \n        </div>\n    );\n};\n\nexport default Header;","const Title = () => {\n    return (\n        <div>\n            <h1>Covid Tracker</h1>\n        </div>\n    );\n};\n\nexport default Title;","const Selector = ({ setCountry, countriesJson }) => {\n    return (\n        <div className=\"selector-container\">\n            <select onChange={(e) => setCountry(e.target.value)}>  \n                {countriesJson.map((country, index) => \n                   <option key={index} value={country.Slug}>{country.Country}</option>\n                )}      \n            </select> \n        </div>\n    );\n};\n\nexport default Selector;","const Loading = () => {\n    return (\n        <div className=\"loading\"></div> \n    );\n};\n\nexport default Loading;","import Loading from \"../components/Loading\"; \n\nconst Results = ({ countryData, loading }) => {\n    const { date, newConfirmed, totalConfirmed, newRecovered, totalRecovered } = countryData;\n    return (\n        <div className=\"results-container\">\n            {loading ? \n                        <Loading /> \n                     :  \n                        <div>\n                            <p>日付: <span>{date.slice(0, 10)}</span></p>\n                            <p>新規感染者: <span>{newConfirmed.toLocaleString()}</span></p>     \n                            <p>感染者総数: <span>{totalConfirmed.toLocaleString()}</span></p>    \n                            <p>新規回復者: <span>{newRecovered.toLocaleString()}</span></p>    \n                            <p>回復者総数: <span>{totalRecovered.toLocaleString()}</span></p>    \n                        </div>\n            }\n        </div>\n    );\n};\n\nexport default Results;","import Header from \"../components/Header\"; \nimport Title from \"../components/Title\";\nimport Selector from \"../components/Selector\";\nimport Results from \"../components/Results\";\n\nconst TopPage = ({ countriesJson, setCountry, countryData, loading }) => {\n    return (\n        <div className=\"top-page-container\">\n            <div>\n                <Header />\n                <Title />\n                <Selector countriesJson={countriesJson} setCountry={setCountry} />\n                <Results countryData={countryData} loading={loading} /> \n            </div>\n        </div>\n    );\n};\n\nexport default TopPage;","const Card = ({ allCountriesData }) => {\n    return (\n        <div className=\"card-container\">\n            {allCountriesData.map((singleData, index) =>\n              <div key={index} className=\"card\">\n                <div>\n                    <h2>{singleData.Country}</h2>                   \n                    <p>新規感染者: <span>{singleData.NewConfirmed.toLocaleString()}</span></p>      \n                    <p>感染者総数: <span>{singleData.TotalConfirmed.toLocaleString()}</span></p> \n                </div>   \n              </div>\n            )} \n        </div>\n    );\n};\n\nexport default Card;","import Header from \"../components/Header\"; \nimport Title from \"../components/Title\";\nimport Card from \"../components/Card\";  \n\nconst WorldPage = ({ allCountriesData }) => {\n    return (\n        <div className=\"world-page-container\">\n            <Header />\n            <Title />\n            <Card allCountriesData={allCountriesData} />\n        </div>\n    );\n};\n\nexport default WorldPage;","import { useState, useEffect } from \"react\";\nimport { Route, Switch, BrowserRouter } from \"react-router-dom\";\nimport countriesJson from \"./countries.json\";\nimport TopPage from \"./pages/TopPage\"; \nimport WorldPage from \"./pages/WorldPage\";\nimport './App.css';\n\nfunction App() {\n  const [loading, setLoading] = useState(false);\n  const [country, setCountry] = useState(\"japan\");\n  const [countryData, setCountryData] = useState({\n    date: \"\",            \n    newConfirmed: \"\",     \n    totalConfirmed: \"\",   \n    newRecovered: \"\",    \n    totalRecovered: \"\",  \n  });\n  const [allCountriesData, setAllCountriesData] = useState([]);\n\n  useEffect(() => {\n    const getCountryData = () => {\n        setLoading(true); \n        fetch(`https://api.covid19api.com/country/${country}`) \n        .then(res => res.json())\n        .then(data => {\n            setCountryData({\n              date: data[data.length -1].Date,             \n              newConfirmed: data[data.length -1].Confirmed - data[data.length -2].Confirmed,      \n              totalConfirmed: data[data.length -1].Confirmed,    \n              newRecovered:  data[data.length -1].Recovered- data[data.length -2].Recovered,    \n              totalRecovered: data[data.length -1].Recovered,    \n          });\n          setLoading(false); \n        })\n        .catch(err => alert(\"エラーが発生しました。ページをリロードして、もう一度トライしてください。\"));  \n    }\n    getCountryData();\n  }, [country])\n\n  useEffect(() => {  \n      fetch(\"https://api.covid19api.com/summary\")\n      .then(res => res.json())\n      .then(data => setAllCountriesData(data.Countries))\n      .catch(err => alert(\"エラーが発生しました。ページをリロードして、もう一度トライしてください。\")); \n  }, []); \n  return (\n    <BrowserRouter>   \n      <Switch>        \n          <Route exact path=\"/\">    \n              <TopPage countriesJson={countriesJson} setCountry={setCountry} countryData={countryData} loading={loading} />\n          </Route>  \n          <Route exact path=\"/world\">  \n              <WorldPage allCountriesData={allCountriesData} />            \n          </Route>      \n      </Switch>       \n  </BrowserRouter>   \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}